swagger: '2.0'
info:
  title: LSTMVis API
  version: "0.2"
consumes:
  - application/json
produces:
  - application/json

basePath: /api/v2

paths:
  /context/{project}:
    get:
      operationId: lstm_server.get_context
      tags:
        - all
        - contexts
      summary: data for a list of token positions and their context
      parameters:

        - $ref: '#/parameters/project'

        - $ref: '#/parameters/source'

        - name: pos
          description: list of queried positions
          in: query
          required: true
          type: array
          items:
            type: integer
          collectionFormat: csv

        - name: left
          description: size of context to the left of each pos
          in: query
          required: true
          type: integer
          default: 10
        - name: right
          description: size of context to the right of each pos
          in: query
          required: true
          type: integer
          default: 10

        - name: dims
          description: >
           list of required data dimensions, like state values ('states'), token values ('words'),
             or meta information ('meta_XYZ')
          in: query
          required: true
          type: array
          items:
            type: string
          collectionFormat: csv
          default: states,words

        - name: bitmask
          description: >
                bitmask for selecting specific dimension of state vectors.
                E.g., '1011' selects cells 0,2,3. Overrides parameter 'cells'
          in: query
          required: False
          type: string
          pattern: "^[01]+$"

        - name: cells
          description: an array of selected cell indices. Overwritten by 'bitmask'.
          in: query
          required: False
          type: array
          items:
            type: integer
          collectionFormat: csv

        - name: transform
          description: state value transformations. By default all values are tanh-ed
          in: query
          required: False
          type: string
          enum:
            - tanh
            - none
          default: tanh

        - name: activation
          description: >
            the activation threshold. Needed for querying matching results
            (for dimension 'cell-count', e.g.)
          in: query
          required: False
          type: number
          default: 0.3

      responses:
        200:
          description: Return requested data
          schema:
            $ref: '#/definitions/Context'

  /info:
    get:
      tags:
        - all
        - info
      summary: information about all projects and sources available
      operationId: lstm_server.get_info
      responses:
        200:
          description: return list of projects
          schema:
            type: array
            items:
              type: object

  /search/{project}:
    get:
      tags:
        - all
        - search and match
      summary: >
        search for a token within the project. If an index exists,
        it is used otherwise the search uses Regex matching.
      operationId: lstm_server.search
      parameters:
        - $ref: '#/parameters/project'

        - name: q
          in: query
          description: query string
          type: string
          required: true

        - name: html
          description: formatted results in HTML
          in: query
          type: boolean
          default: false

        - name: limit
          description: max number of results
          in: query
          type: integer
          default: 50


      responses:
        200:
          description: aaa
          schema:
            type: object


parameters:
  project:
    name: project
    description: project ID (slug)
    in: path
    required: true
    type: string
    default: childbook

  source:
    name: source
    description: source data ID (slug)
    in: query
    required: true
    type: string
    default: state1


definitions:
  Context:
    type: object
    required:
      - query
    properties:
      query:
        type: object
        description: returns all query paramaters aas object
        example: {"activation": 0.3,"pos": [12],"project": "childbook","source": "state1"}
      values:
        $ref: '#/definitions/Values'
  Values:
    type: object
    description: returned values for requested dimensions
    properties:
      states:
        type: array
        description: state values as array (token indices/ positions) of arrays (state vetcors)
        items:
          type: array
          items:
            type: integer
        example: [[.3,.5,.7], [.2,.1,0]]
